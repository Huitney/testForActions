name: Deployment

on:
  workflow_run:
    workflows: ["PHP Tests", "JavaScript Tests", "Snyk Security Tests"]
    types: completed

jobs:
  wait-for-all-tests:
    runs-on: self-hosted
    outputs:
      all_completed: ${{ steps.check.outputs.all_completed }}
    steps:
      - name: Check if all test workflows are completed
        id: check
        run: |
        
          echo "Checking test workflows status..."

        
          # GitHub API 取得所有 workflow 的狀態
          latest_php=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?workflow_name=PHP%20Tests&branch=master&status=completed" | jq -r '.workflow_runs[0].status')

          latest_js=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?workflow_name=JavaScript%20Tests&branch=master&status=completed" | jq -r '.workflow_runs[0].status')

          latest_snyk=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?workflow_name=Snyk%20Security%20Tests&branch=master&status=completed" | jq -r '.workflow_runs[0].status')

          echo "PHP Test Status: $latest_php"
          echo "JS Test Status: $latest_js"
          echo "Snyk Test Status: $latest_snyk"

          # 檢查是否全部完成
          if [[ "$latest_php" == "completed" && "$latest_js" == "completed" && "$latest_snyk" == "completed" ]]; then
            echo "all_completed=true" >> $GITHUB_OUTPUT
          else
            echo "all_completed=false" >> $GITHUB_OUTPUT
          fi

  check-tests-status:
    runs-on: self-hosted
    needs: wait-for-all-tests
    if: ${{ needs.wait-for-all-tests.outputs.all_completed == 'true' }}
    steps:
      - name: Debug MySQL Query
        run: |
          echo "Checking MySQL query results..."
          mysql -u ci_user -pci_password -D ci_test_reports -e "SELECT test_name, status FROM test_results_Huitney ORDER BY created_at DESC;"
      - name: Get Test Results from MySQL
        id: check
        run: |
          php_status=$(mysql -u ci_user -pci_password -D ci_test_reports -se "SELECT status FROM test_results_Huitney WHERE test_name='php Tests' ORDER BY created_at DESC LIMIT 1;")
          js_status=$(mysql -u ci_user -pci_password -D ci_test_reports -se "SELECT status FROM test_results_Huitney WHERE test_name='js Tests' ORDER BY created_at DESC LIMIT 1;")
          snyk_status=$(mysql -u ci_user -pci_password -D ci_test_reports -se "SELECT status FROM test_results_Huitney WHERE test_name='snyk Tests' ORDER BY created_at DESC LIMIT 1;")

          # 確保變數不為空
          php_status=${php_status:-"unknown"}
          js_status=${js_status:-"unknown"}
          snyk_status=${snyk_status:-"unknown"}

          echo "php_status=$php_status" >> "$GITHUB_ENV"
          echo "js_status=$js_status" >> "$GITHUB_ENV"
          echo "snyk_status=$snyk_status" >> "$GITHUB_ENV"

      - name: Debug test statuses
        run: |
          echo "PHP Status: ${{ steps.check.outputs.php_status }}"
          echo "JS Status: ${{ steps.check.outputs.js_status }}"
          echo "Snyk Status: ${{ steps.check.outputs.snyk_status }}"

  checkStatus:
    runs-on: self-hosted
    needs: check-tests-status
    steps:
      - name: Debug test statuses
        run: |
          echo "PHP Test Status: ${{ needs.check-tests-status.outputs.php_status }}"
          echo "JS Test Status: ${{ needs.check-tests-status.outputs.js_status }}"
          echo "Snyk Test Status: ${{ needs.check-tests-status.outputs.snyk_status }}"
  
  deploy:
    runs-on: self-hosted
    needs: check-tests-status
    if: |
      contains(needs.check-tests-status.outputs.php_status, 'failure') &&
      contains(needs.check-tests-status.outputs.js_status, 'failure') &&
      contains(needs.check-tests-status.outputs.snyk_status, 'failure')   
    steps:
      - name: Debug test statuses before deployment
        run: |
          echo "PHP Test Status: ${{ needs.check-tests-status.outputs.php_status }}"
          echo "JS Test Status: ${{ needs.check-tests-status.outputs.js_status }}"
          echo "Snyk Test Status: ${{ needs.check-tests-status.outputs.snyk_status }}"
      
      - name: Check out code
        uses: actions/checkout@v4
      
      - name: Fix Git permissions
        run: sudo chown -R $(whoami) /var/www/testForActions/.git
        working-directory: /var/www/testForActions
      
      - name: Pull the latest code
        run: |
          git stash
          git pull origin master
        working-directory: /var/www/testForActions
      
      - name: Fix permissions for /var/www/html
        run: sudo chown -R $(whoami) /var/www/html
    
      - name: Move the code
        run: |
          rm -r ./test-website
          mv /var/www/testForActions/test-website ./test-website
        working-directory: /var/www/html
