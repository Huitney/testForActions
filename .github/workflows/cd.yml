name: Deployment

on:
  workflow_run:
    workflows: ["PHP Tests", "JavaScript Tests", "Snyk Security Tests"]
    types: completed

jobs:
  wait-for-all-tests:
    runs-on: self-hosted
    outputs:
      all_completed: ${{ steps.check.outputs.all_completed }}
    steps:
      - name: Check if all test workflows are completed
        id: check
        run: |
          latest_php=$(gh run list --workflow "PHP Tests" --branch master --json status --jq '.[0].status')
          latest_js=$(gh run list --workflow "JavaScript Tests" --branch master --json status --jq '.[0].status')
          latest_snyk=$(gh run list --workflow "Snyk Security Tests" --branch master --json status --jq '.[0].status')

          if [[ "$latest_php" == "completed" && "$latest_js" == "completed" && "$latest_snyk" == "completed" ]]; then
            echo "all_completed=true" >> $GITHUB_OUTPUT
          else
            echo "all_completed=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check-tests-status:
    runs-on: self-hosted
    needs: wait-for-all-tests
    if: ${{ needs.wait-for-all-tests.outputs.all_completed == 'true' }}
    outputs:
      php_status: ${{ steps.check.outputs.php_status }}
      js_status: ${{ steps.check.outputs.js_status }}
      snyk_status: ${{ steps.check.outputs.snyk_status }}
    steps:
      - name: Get Test Results from MySQL
        id: check
        run: |
          php_status=$(mysql -u ci_user -pci_password -D ci_test_reports -se "SELECT status FROM test_results_${{ github.actor }} WHERE test_name='php' ORDER BY created_at DESC LIMIT 1;")
          js_status=$(mysql -u ci_user -pci_password -D ci_test_reports -se "SELECT status FROM test_results_${{ github.actor }} WHERE test_name='js' ORDER BY created_at DESC LIMIT 1;")
          snyk_status=$(mysql -u ci_user -pci_password -D ci_test_reports -se "SELECT status FROM test_results_${{ github.actor }} WHERE test_name='snyk' ORDER BY created_at DESC LIMIT 1;")

          echo "php_status=${php_status}" >> $GITHUB_OUTPUT
          echo "js_status=${js_status}" >> $GITHUB_OUTPUT
          echo "snyk_status=${snyk_status}" >> $GITHUB_OUTPUT

  deploy:
    runs-on: self-hosted
    needs: check-tests-status
    if: ${{ needs.check-tests-status.outputs.php_status == 'failure' && needs.check-tests-status.outputs.js_status == 'failure' && needs.check-tests-status.outputs.snyk_status == 'failure' }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      
      - name: Fix Git permissions
        run: sudo chown -R $(whoami) /var/www/testForActions/.git
        working-directory: /var/www/testForActions
      
      - name: Pull the latest code
        run: |
          git stash
          git pull origin master
        working-directory: /var/www/testForActions
      
      - name: Fix permissions for /var/www/html
        run: sudo chown -R $(whoami) /var/www/html
    
      - name: Move the code
        run: |
          rm -r ./test-website
          mv /var/www/testForActions/test-website ./test-website
        working-directory: /var/www/html
