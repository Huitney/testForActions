name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  php-tests:
    runs-on: self-hosted
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Fix permissions for test directory
      run: |
        sudo chown -R $USER:$USER /var/www/html/test-website
        sudo chmod -R 755 /var/www/html/test-website

    - name: Install PHP dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y zip unzip
        curl -sS https://getcomposer.org/installer | php
        php composer.phar install
      working-directory: /var/www/html/test-website

    - name: Run PHP Unit Tests and collect logs
      run: |
        ./vendor/bin/phpunit tests/exampleTest.php > /var/www/testForActions/php_test_result.log 2>&1 || touch /var/www/testForActions/php_test_result.log
      working-directory: /var/www/html/test-website
      continue-on-error: true
      
    
  js-tests:
    runs-on: self-hosted
    if: ${{ always() }}
    needs: [php-tests]
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Fix permissions for test directory
      run: |
        sudo chown -R $USER:$USER /var/www/html/test-website
        sudo chmod -R 755 /var/www/html/test-website

    - name: Install nvm and Node.js
      run: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
        export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        nvm install --lts
        nvm use --lts
      shell: bash

    - name: Install Node.js dependencies
      run: npm install
      working-directory: /var/www/html/test-website
      
    - name: Install Puppeteer
      run: npm install puppeteer
      working-directory: /var/www/html/test-website


    - name: Run JavaScript Tests and collect logs
      run: |
        npx jest tests/script.test.js > /var/www/testForActions/js_test_result.log 2>&1 || touch /var/www/testForActions/js_test_result.log
      working-directory: /var/www/html/test-website
      continue-on-error: true
      
    
  snyk-security-tests:
    runs-on: self-hosted
    if: ${{ always() }}
    needs: [php-tests, js-tests]
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Fix permissions for test directory
      run: |
        sudo chown -R $USER:$USER /var/www/html/test-website
        sudo chmod -R 755 /var/www/html/test-website

    - name: Run Snyk Security Tests and collect logs
      run: |
        ./snyk/snykTest.sh > /var/www/testForActions/snyk_test_result.log 2>&1 || touch /var/www/testForActions/snyk_test_result.log
      working-directory: /var/www/html/test-website
      continue-on-error: true