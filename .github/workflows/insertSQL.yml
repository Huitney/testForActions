name: insertSQL

on:
  workflow_call:
    inputs:
      name: 
        description: 'Name of test'
        required: true
        type: 'string'
    
    outputs:
      testResult: 
        description: 'Test result'
        value: ${{ jobs.insert-SQL.outputs.testResult }}
    
jobs:
  insert-SQL:
    runs-on: self-hosted
    outputs:
      testResult: ${{ steps.collectResult.outputs.status }}
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Collect and insert test results into MySQL
      id: collectResult
      run: |
        LOG_DIR="/var/www/testForActions"
        LOG_FILE="${LOG_DIR}/${{ inputs.name }}_test_result.log"
        GITHUB_USER="${{ github.actor }}"
        TABLE_NAME="test_results_automatic"
        

        if [ ! -f "$LOG_FILE" ]; then
          echo "Error: $LOG_FILE is missing."
          echo "status=error" >> "$GITHUB_ENV"
          exit 1
        fi

        # 解析測試結果
        test_name="${{ inputs.name }} Tests"
        status="success"
        error_count=$(grep -c -E "ERROR|FAIL" "$LOG_FILE" 2>/dev/null || echo "0")
        error_count=$(echo "$error_count" | head -n1 | tr -cd '0-9')
        error_location=$(grep -oP "at .*:\d+" "$LOG_FILE" || echo "無")
        line=$(grep -oP "(?<=:)\d+" "$LOG_FILE" | tr '\n' ',' | sed 's/,$//' || echo "NULL")
        log_content=$(tr -d "'\n\r" < "$LOG_FILE")

        if grep -q -E "ERROR|FAIL|FAILURES|Deprecation Notice" "$LOG_FILE"; then
          status="failure"
        fi

        # 設置 GitHub Actions 輸出變數
        echo "status=$status" >> "$GITHUB_ENV"
        
        # 嘗試手動測試 MySQL 登入
        echo "Testing MySQL Connection..."
        mysql -u ci_user -pci_password -D ci_test_reports -e "SHOW TABLES;"

        # 建立 MySQL 表
        mysql -u ci_user -pci_password -D ci_test_reports -e "
        CREATE TABLE IF NOT EXISTS \`${TABLE_NAME}\` (
          id INT AUTO_INCREMENT PRIMARY KEY,
          test_name VARCHAR(255),
          test_location VARCHAR(255),
          line VARCHAR(255) DEFAULT NULL,
          error_count INT,
          error_location TEXT,
          status VARCHAR(50),
          log TEXT,
          created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );"

        # 插入測試結果
        mysql  -u ci_user -pci_password -D ci_test_reports -e "
        INSERT INTO \`${TABLE_NAME}\` (test_name, test_location, line, error_count, error_location, status, log)
        VALUES ('$test_name', '$LOG_DIR', '$line', '$error_count', '$error_location', '$status', '$log_content');"
        
      working-directory: /var/www/testForActions
      shell: /usr/bin/bash -e {0}
